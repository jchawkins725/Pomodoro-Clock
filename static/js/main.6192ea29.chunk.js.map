{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","BreakDisplay","react_default","a","createElement","className","id","onClick","this","props","removeclick","break","addclick","React","Component","Start","click","concat","running","reset","SessionDisplay","session","Timer","minutes","Math","floor","timer","seconds","label","App_Start","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","cycle","intervalId","handleSessionIncrement","bind","assertThisInitialized","handleSessionDecrement","handleBreakIncrement","handleBreakDecrement","handleTimer","tick","clearInterval","audio","document","getElementById","pause","currentTime","setState","prevState","play","_this2","setInterval","App_BreakDisplay","App_SessionDisplay","App_Timer","preload","src","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6192ea29.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass BreakDisplay extends React.Component {\n  render () {\n    return (\n      <div className=\"flex\">\n        <div>\n          <p className=\"small-titles\" id=\"break-label\">Break Length</p>\n          <div className=\"small-flex\">\n            <i id=\"break-decrement\" className=\"fas fa-minus\" onClick={this.props.removeclick}></i>\n            <p id=\"break-length\">{this.props.break}</p>\n           <i id=\"break-increment\" className=\"fas fa-plus\" onClick={this.props.addclick}></i>\n         </div>\n        </div>\n      </div>\n    );\n  }\n}\nclass Start extends React.Component {\n  render () {\n    return (\n      <div className=\"start-container\">\n        <i id=\"start_stop\" onClick={this.props.click} className={`fas ${this.props.running ? \"fa-pause\" : \"fa-play\"}`}></i>\n        <i id=\"reset\" className=\"fas fa-redo\" onClick={this.props.reset}></i>\n      </div>\n    )\n  }\n}\nclass SessionDisplay extends React.Component {\n  render () {\n    return (\n      <div className=\"flex\">\n        <div>\n         <p id=\"session-label\" className=\"small-titles\">Session Length</p>\n         <div className=\"small-flex\">\n           <i id=\"session-decrement\" className=\"fas fa-minus\" onClick={this.props.removeclick}></i>\n           <p id=\"session-length\">{this.props.session}</p>\n           <i id=\"session-increment\" className=\"fas fa-plus\" onClick={this.props.addclick}></i>\n         </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Timer extends React.Component {\n  render () {\n    const minutes = Math.floor(this.props.timer/60);\n    const seconds = this.props.timer % 60;\n    return (\n      <div className=\"timer-container\">\n      <div className=\"timer-display\">\n        <div className={`arrow ${this.props.timer === this.props.session * 60 ? \"\" : this.props.running ? \"arrow-play\" : \"arrow-pause\"}`}></div>\n        <h2 id=\"timer-label\">{this.props.label}</h2>\n        <div id=\"time-left\">{minutes < 10 ? \"0\" + minutes: minutes}:{seconds < 10 ? \"0\" + seconds: seconds}</div>\n        <Start running={this.props.running} click={this.props.click} reset={this.props.reset}/>\n      </div>\n      </div>\n    );\n  }\n}  \nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      break: 5,\n      session: 25,\n      timer: 1500,\n      cycle: \"Session\",\n      running: false,\n      intervalId: null,\n      reset: true\n    }\n    this.handleSessionIncrement = this.handleSessionIncrement.bind(this);\n    this.handleSessionDecrement = this.handleSessionDecrement.bind(this);\n    this.handleBreakIncrement = this.handleBreakIncrement.bind(this);\n    this.handleBreakDecrement = this.handleBreakDecrement.bind(this);\n    this.handleTimer = this.handleTimer.bind(this);\n    this.tick = this.tick.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n  reset() {\n    clearInterval(this.state.intervalId);\n    const audio = document.getElementById(\"beep\");\n    audio.pause();\n    audio.currentTime = 0;\n    this.setState({\n      break: 5,\n      session: 25,\n      timer: 1500,\n      cycle: \"Session\",\n      running: false,\n      intervalId: null\n    })\n  }\n  handleSessionIncrement() {\n    if (this.state.timer < 3600) { this.setState(prevState => ({session: prevState.session + 1, timer: prevState.timer + 60}))\n    }\n  }\n  handleSessionDecrement() {\n    if(this.state.timer > 60) {this.setState(prevState => ({session: prevState.session - 1, timer: prevState.timer - 60}))\n    }\n  }\n  handleBreakIncrement() {\n    if(this.state.break < 60) {this.setState(prevState => ({break: prevState.break + 1}))\n    }\n  }\n  handleBreakDecrement() {\n    if(this.state.break > 1) {this.setState(prevState => ({break: prevState.break - 1}))\n    }\n  }\n  tick() {\n    if (this.state.timer > 0) {\n      this.setState(prevState => ({timer: prevState.timer - 1}));\n    }\n    else if (this.state.cycle === \"Session\") {\n      this.setState({cycle: \"Break\", timer: this.state.break * 60});\n      const audio = document.getElementById(\"beep\");\n      audio.play();\n      audio.currentTime = 0;\n    }\n    else {\n      this.setState({cycle: \"Session\", timer: this.state.session *60})\n      const audio = document.getElementById(\"beep\");\n      audio.play();\n      audio.currentTime = 0;\n    }\n  }\n  handleTimer() {\n   if (!this.state.running) {\n    this.setState(prevState => ({intervalId: setInterval(this.tick, 1000), running: !prevState.running}));\n   }\n    else {\n      clearInterval(this.state.intervalId);\n      this.setState(prevState => ({running: !prevState.running}));\n    }\n  }\n  render () {\n    return (\n      <div className=\"container\">\n        <h1 className=\"title\">Pomodoro Clock</h1>\n        <BreakDisplay break={this.state.break} addclick={this.handleBreakIncrement} removeclick={this.handleBreakDecrement}/>     \n        <SessionDisplay session={this.state.session} addclick={this.handleSessionIncrement} removeclick={this.handleSessionDecrement}/>\n        <Timer timer={this.state.timer} label={this.state.cycle} running={this.state.running} click={this.handleTimer} reset={this.reset} session={this.state.session}/>\n        <audio id=\"beep\" preload=\"auto\" \n          src=\"https://goo.gl/65cBl1\" />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}